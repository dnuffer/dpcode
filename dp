#!/usr/bin/env ruby

require 'fileutils'
require 'benchmark'

raise "exercise name missing" unless ARGV.size == 1

exercise = ARGV[0]

raise "exercise (#{exercise}) directory does not exist" unless Dir.exists?(exercise)

#TODO
#git clean -fxd
#git checkout master

class Numeric
  def duration
    secs  = self.to_int
    mins  = secs / 60
    hours = mins / 60
    days  = hours / 24

    if days > 0
      "#{days} days and #{hours % 24} hours"
    elsif hours > 0
      "#{hours}:#{mins % 60}:#{secs % 60}"
    elsif mins > 0
      "#{mins}:#{secs % 60}"
    elsif secs >= 0
      "#{secs} seconds"
    end
  end
end

Dir.chdir(exercise) do
  FileUtils.cp 'README', '/dev/stdout'
  elapsed_seconds = Benchmark.realtime do
    if File.exists? './Makefile'
      begin
        raise "failed running make edit" unless system 'make edit'
        passed_make_check = system 'make check'
        if !passed_make_check
          puts "Failed make check! Try again?"
          ans=$stdin.gets
          break if ans.downcase[0] == ?n
        end
      end until passed_make_check
      raise "failed running make clean" unless system 'make clean'
    else
      raise "failed running ./work" unless system './work'
    end
  end
  puts "Took #{elapsed_seconds.duration}"
end

